/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package boundary;

import Control.ProductControl;
import Control.TableCellListener;
import Entity.Product;
import java.awt.event.ActionEvent;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ryancavanagh
 */
public class EditProductOrder extends javax.swing.JFrame {

    /**
     * Creates new form EditProductOrder
     */
    
    private String p;
    private HashMap<Product, Integer> order;
    private CustomerPurchase cpBoundry;
    public EditProductOrder(String p1, HashMap<Product, Integer> o, CustomerPurchase cp) {
        initComponents();
        p = p1;
        cpBoundry = cp;
        order = o;
        productName.setText("Product: " + p);
        updateTable();
        TableCellListener obs = new TableCellListener(warehouseTable, action);
    }
    
    private void updateTable (){
        ProductControl pc = Main.Main.controlfactory.getProduct();
        List <Product> list = pc.getSingleProductResultSet(p); 
        
        DefaultTableModel model = (DefaultTableModel) warehouseTable.getModel();
        Object rowData[] = new Object[3];
        for(int i = 0; i < list.size(); i++)
        {
            rowData[0] = list.get(i).getWarehouse().getWarehousename();
            rowData[1] = list.get(i).getQuantity();
            if (order.containsKey(list.get(i))){
                rowData[2] = order.get(list.get(i));
            }
            else {
                rowData[2] = 0;
            }
            model.addRow(rowData);
        }
//        java.sql.ResultSet rs1 = (java.sql.ResultSet) rs;
//        SalespersonTable.setModel(DbUtils.resultSetToTableModel(rs));
       
    }
    
    Action action = new AbstractAction()
    {
        public void actionPerformed(ActionEvent e)
        {
            TableCellListener tcl = (TableCellListener)e.getSource();
            ProductControl pc = Main.Main.controlfactory.getProduct();
            Product p1 = pc.getProduct(p, warehouseTable.getValueAt(tcl.getRow(), 0).toString());
            
            int addQuantity = Integer.parseInt(tcl.getNewValue().toString());
            int inStock = Integer.parseInt(warehouseTable.getValueAt(tcl.getRow(), 1).toString());
            if (addQuantity <= inStock 
                    && addQuantity > 0) {
                order.put(p1, Integer.parseInt(warehouseTable.getValueAt(tcl.getRow(), 2).toString()));
            }
            else if (addQuantity > inStock){
                order.put(p1, inStock);
                warehouseTable.setValueAt(inStock, tcl.getRow(), 2);
                JOptionPane.showMessageDialog(null, "Quantity to Add must be lower than In Stock, Changed to all in stock", "Alert", JOptionPane.ERROR_MESSAGE);
            }
            else{
                order.remove(p1);
                warehouseTable.setValueAt(0, tcl.getRow(), 2);
                JOptionPane.showMessageDialog(null, "Quantity to Add must greater than or equal to 0, removed from order", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        warehouseTable = new javax.swing.JTable();
        addToOrder = new javax.swing.JButton();
        productName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        warehouseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Warehouse Name", "In Stock", "Add to Order"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(warehouseTable);

        addToOrder.setText("Add to Order");
        addToOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(265, 265, 265)
                        .addComponent(addToOrder))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productName)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 622, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addToOrder)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addToOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToOrderActionPerformed
        // TODO add your handling code here:
        cpBoundry.updateOrder(this.order);
        this.setVisible(false);
        cpBoundry.setVisible(true);
    }//GEN-LAST:event_addToOrderActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EditProductOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EditProductOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EditProductOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(EditProductOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new EditProductOrder().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel productName;
    private javax.swing.JTable warehouseTable;
    // End of variables declaration//GEN-END:variables
}
